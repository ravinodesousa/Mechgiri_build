{"version":3,"sources":["api.js","assets/images/no_image.png","auth-header.js","../node_modules/webpack/buildin/module.js","views/dashboard/ServiceProviderDashboard.js"],"names":["api","RAZOR_PAY_TEST_KEY","apiUrl","mobileApiUrl","imgUrlService","imgUrlBrand","imgUrlAds","imgUrlShopImg","noImage","img","module","exports","authHeader","user","JSON","parse","localStorage","getItem","accessToken","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","get","l","i","override","css","userId","id","Dashboard","props","checkPrice","fetch","method","headers","then","response","json","responseJsonFromServerData","console","log","check","map","item","key","price","setState","model","catch","error","loading","bind","state","totalApplicationCount","todaysApplicationCount","this","today","Date","data","todayDate","moment","format","body","stringify","height","width","size","color","xs","md","xl","sm","className","onClose","setModal","show","style","textAlign","fontSize","fontWeight","to","pathname","Component"],"mappings":"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","file":"static/js/34.99c8f619.chunk.js","sourcesContent":["import img from \"./assets/images/no_image.png\";\nvar api = {\n  //heroku\n  // apiUrl: \"https://mechgiri-api.herokuapp.com/web/\",\n  // mobileApiUrl: \"https://mechgiri-api.herokuapp.com/API/\",\n  // imgUrlService: \"https://mechgiri-api.herokuapp.com/service-icons/\",\n  // imgUrlBrand: \"https://mechgiri-api.herokuapp.com/brand-icons/\",\n  // imgUrlAds: \"https://mechgiri-api.herokuapp.com/mobile-ads/\",\n  // imgUrlShopImg: \"https://mechgiri-api.herokuapp.com/shop-img/\",\n\n  RAZOR_PAY_TEST_KEY: \"rzp_live_BXGi4WJt107sJX\",\n\n  apiUrl: \"http://api.mechgiri.com/web/\",\n  mobileApiUrl: \"http://api.mechgiri.com/API/\",\n  imgUrlService: \"http://api.mechgiri.com/service-icons/\",\n  imgUrlBrand: \"http://api.mechgiri.com/brand-icons/\",\n  imgUrlAds: \"http://api.mechgiri.com/mobile-ads/\",\n  imgUrlShopImg: \"http://api.mechgiri.com/shop-img/\",\n\n  noImage: img,\n\n  // apiUrl: \"http://127.0.0.1:3001/web/\",\n  // mobileApiUrl: \"http://127.0.0.1:3001/API/\",\n  // imgUrlService: \"http://127.0.0.1:3001/service-icons/\",\n  // imgUrlBrand: \"http://127.0.0.1:3001/brand-icons/\",\n  // imgUrlAds: \"http://127.0.0.1:3001/mobile-ads/\",\n  // imgUrlShopImg: \"http://127.0.0.1:3001/shop-img/\",\n};\nexport default api;\n","module.exports = __webpack_public_path__ + \"static/media/no_image.104a1a91.png\";","export default function authHeader() {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n  if (user && user.accessToken) {\r\n    // header for all requests\r\n    return {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-access-token\": user.accessToken,\r\n    };\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import React, { Component } from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CProgress,\r\n  CRow,\r\n  CCallout,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CModalBody,\r\n  CModalFooter,\r\n} from \"@coreui/react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport api from \"../../api\";\r\nimport authHeader from \"../../auth-header\";\r\nimport { ScaleLoader } from \"react-spinners\";\r\nimport { css } from \"@emotion/core\";\r\nconst override = css`\r\n  display: block;\r\n  border-color: black;\r\n  position: absolute;\r\n  left: 43%;\r\n  top: 50%;\r\n  z-index: 1;\r\n`;\r\nvar user = JSON.parse(localStorage.getItem(\"user\"));\r\nvar userId = user.id;\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.checkPrice = this.checkPrice.bind(this);\r\n    this.state = {\r\n      loading: false,\r\n      totalApplicationCount: null,\r\n      todaysApplicationCount: null,\r\n      model: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    //add price redirect\r\n    this.checkPrice();\r\n    // var myVar = setInterval(this.checkPrice, 5000);\r\n    var today = new Date();\r\n    var data = {\r\n      userId: userId,\r\n      todayDate: moment(today).format(\"YYYY-MM-DD\"),\r\n    };\r\n    this.setState({ loading: true });\r\n    fetch(api.apiUrl + \"get_applications_count_by_id\", {\r\n      method: \"POST\",\r\n      headers: authHeader(),\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((responseJsonFromServerData) => {\r\n        console.log(responseJsonFromServerData);\r\n\r\n        this.setState({\r\n          totalApplicationCount: responseJsonFromServerData,\r\n          loading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        this.setState({ loading: false });\r\n      });\r\n\r\n    fetch(api.apiUrl + \"get_applications_todays_count_by_id\", {\r\n      method: \"POST\",\r\n      headers: authHeader(),\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((responseJsonFromServerData) => {\r\n        console.log(responseJsonFromServerData);\r\n        this.setState({\r\n          todaysApplicationCount: responseJsonFromServerData,\r\n          loading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        this.setState({ loading: false });\r\n      });\r\n  }\r\n\r\n  checkPrice = () => {\r\n    fetch(api.apiUrl + \"check_prices/\" + userId, {\r\n      method: \"get\",\r\n      headers: authHeader(),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((responseJsonFromServerData) => {\r\n        console.log(responseJsonFromServerData);\r\n        var check = false;\r\n        responseJsonFromServerData.map((item, key) => {\r\n          if (item.price === null) {\r\n            check = true;\r\n          }\r\n        });\r\n        if (check === true) {\r\n          this.setState({ model: true });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        this.setState({ loading: false });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    // console.log(totalApplicationCount);\r\n    return (\r\n      <>\r\n        <CRow>\r\n          <CCol>\r\n            <CCard>\r\n              <ScaleLoader\r\n                height={40}\r\n                width={12}\r\n                css={override}\r\n                size={150}\r\n                //size={\"150px\"} this also works\r\n                color={\"#B54545\"}\r\n                loading={this.state.loading}\r\n              />\r\n              <CCardHeader>Dashboard</CCardHeader>\r\n              <CCardBody>\r\n                <CRow>\r\n                  <CCol xs=\"12\" md=\"6\" xl=\"6\">\r\n                    <CRow>\r\n                      <CCol sm=\"12\">\r\n                        <CCallout color=\"info\">\r\n                          <small className=\"text-muted\">Total bookings</small>\r\n                          <br />\r\n                          <strong className=\"h4\">\r\n                            {this.state.totalApplicationCount}\r\n                          </strong>\r\n                        </CCallout>\r\n                      </CCol>\r\n                    </CRow>\r\n                  </CCol>\r\n\r\n                  <CCol xs=\"12\" md=\"6\" xl=\"6\">\r\n                    <CRow>\r\n                      <CCol sm=\"12\">\r\n                        <CCallout color=\"warning\">\r\n                          <small className=\"text-muted\">Todays bookings</small>\r\n                          <br />\r\n                          <strong className=\"h4\">\r\n                            {this.state.todaysApplicationCount}\r\n                          </strong>\r\n                        </CCallout>\r\n                      </CCol>\r\n                    </CRow>\r\n                  </CCol>\r\n                </CRow>\r\n              </CCardBody>\r\n            </CCard>\r\n\r\n            {/* price redirect Model */}\r\n            <CModal\r\n              onClose={() => this.setModal(false)}\r\n              show={this.state.model}\r\n            >\r\n              <CModalHeader>\r\n                <CModalTitle>Alert</CModalTitle>\r\n              </CModalHeader>\r\n              <CModalBody>\r\n                <div>\r\n                  <span\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      fontSize: \"15px\",\r\n                      fontWeight: \"500\",\r\n                    }}\r\n                  >\r\n                    Please enter the prices for your selected services.\r\n                  </span>\r\n                </div>\r\n              </CModalBody>\r\n              <CModalFooter>\r\n                <Link\r\n                  to={{\r\n                    pathname: \"/service-provider-profile\",\r\n                    data: 3,\r\n                  }}\r\n                  className=\"btn submit-btn\"\r\n                >\r\n                  Proceed\r\n                </Link>\r\n              </CModalFooter>\r\n            </CModal>\r\n          </CCol>\r\n        </CRow>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n"],"sourceRoot":""}