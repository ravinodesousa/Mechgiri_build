{"version":3,"sources":["api.js","assets/images/no_image.png","auth-header.js","auth-header-file.js","views/appointments/ServiceProviderAppointments.js"],"names":["api","RAZOR_PAY_TEST_KEY","apiUrl","mobileApiUrl","imgUrlService","imgUrlBrand","imgUrlAds","imgUrlShopImg","noImage","img","module","exports","authHeader","user","JSON","parse","localStorage","getItem","accessToken","override","css","fromDate","toDate","fromDateVal","toDateVal","userId","id","ServiceProviderAppointments","props","paymentStatus","val","isPaymentInitiated","className","color","serviceStatus","isEscalated","isResolved","escalationReason","style","fontWeight","serviceAction","token","status","payment_status","amount","data","console","log","width","onClick","acceptApplication","setState","showPaymentModal","selectedAppointment","amountError","payableAmount","payableAmountError","serviceBreakdownFile","serviceBreakdownFileError","to","pathname","swal","title","text","icon","buttons","dangerMode","then","willDelete","fetch","method","headers","body","stringify","response","json","responseJsonFromServerData","componentDidMount","history","push","catch","error","handleChange","input","e","target","value","initiatePaymentHandler","state","isNaN","loading","formData","FormData","append","authHeaderFile","setTimeout","onChangeFile","event","imageFile","files","stat","name","match","Math","round","size","filter","type","info","appointmentId","filterType","statusTypeFilter","fromDateTypeFilter","toDateTypeFilter","Date","getTime","map","item","key","arr","client","phone","mobileNumber","date","moment","appointmentDate","format","time","appointmentTime","isApproved","paid","action","firebaseToken","bind","con","this","datatable","columns","label","field","sort","attributes","rows","height","sm","xs","md","autoFocus","onChange","margin","hover","entriesOptions","entries","pagesAmount","pagingTop","searchTop","searchBottom","barReverse","responsive","centered","show","onClose","htmlFor","placeholder","borderColor","disabled","display","Component"],"mappings":"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","file":"static/js/20.05baf493.chunk.js","sourcesContent":["import img from \"./assets/images/no_image.png\";\nvar api = {\n  //heroku\n  // apiUrl: \"https://mechgiri-api.herokuapp.com/web/\",\n  // mobileApiUrl: \"https://mechgiri-api.herokuapp.com/API/\",\n  // imgUrlService: \"https://mechgiri-api.herokuapp.com/service-icons/\",\n  // imgUrlBrand: \"https://mechgiri-api.herokuapp.com/brand-icons/\",\n  // imgUrlAds: \"https://mechgiri-api.herokuapp.com/mobile-ads/\",\n  // imgUrlShopImg: \"https://mechgiri-api.herokuapp.com/shop-img/\",\n\n  RAZOR_PAY_TEST_KEY: \"rzp_live_BXGi4WJt107sJX\",\n\n  apiUrl: \"http://api.mechgiri.com/web/\",\n  mobileApiUrl: \"http://api.mechgiri.com/API/\",\n  imgUrlService: \"http://api.mechgiri.com/service-icons/\",\n  imgUrlBrand: \"http://api.mechgiri.com/brand-icons/\",\n  imgUrlAds: \"http://api.mechgiri.com/mobile-ads/\",\n  imgUrlShopImg: \"http://api.mechgiri.com/shop-img/\",\n\n  noImage: img,\n\n  // apiUrl: \"http://127.0.0.1:3001/web/\",\n  // mobileApiUrl: \"http://127.0.0.1:3001/API/\",\n  // imgUrlService: \"http://127.0.0.1:3001/service-icons/\",\n  // imgUrlBrand: \"http://127.0.0.1:3001/brand-icons/\",\n  // imgUrlAds: \"http://127.0.0.1:3001/mobile-ads/\",\n  // imgUrlShopImg: \"http://127.0.0.1:3001/shop-img/\",\n};\nexport default api;\n","module.exports = __webpack_public_path__ + \"static/media/no_image.104a1a91.png\";","export default function authHeader() {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n  if (user && user.accessToken) {\r\n    // header for all requests\r\n    return {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-access-token\": user.accessToken,\r\n    };\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n","export default function authHeader() {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n  if (user && user.accessToken) {\r\n    // header for all requests\r\n    return {\r\n      // \"Content-Type\": \"multipart/form-data\",\r\n      \"x-access-token\": user.accessToken,\r\n    };\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport {\n  CBadge,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CSelect,\n  CInput,\n  CModal,\n  CModalHeader,\n  CModalTitle,\n  CModalBody,\n  CModalFooter,\n  CFormGroup,\n  CLabel,\n  CInputFile,\n} from \"@coreui/react\";\nimport { Link } from \"react-router-dom\";\nimport api from \"../../api\";\nimport authHeader from \"../../auth-header\";\nimport authHeaderFile from \"../../auth-header-file\";\nimport { MDBDataTableV5 } from \"mdbreact\";\nimport moment from \"moment\";\nimport swal from \"sweetalert\";\nimport { ScaleLoader } from \"react-spinners\";\nimport { css } from \"@emotion/core\";\nconst override = css`\n  display: block;\n  border-color: black;\n  position: absolute;\n  left: 43%;\n  top: 50%;\n  z-index: 1;\n`;\nvar fromDate = null;\nvar toDate = null;\nvar fromDateVal = null;\nvar toDateVal = null;\n\nvar user = JSON.parse(localStorage.getItem(\"user\"));\nvar userId = user.id;\n\nclass ServiceProviderAppointments extends Component {\n  constructor(props) {\n    super(props);\n\n    this.serviceAction = this.serviceAction.bind(this);\n\n    this.filter = this.filter.bind(this);\n\n    this.state = {\n      data: [],\n      loading: false,\n      fromDateTypeFilter: \"\",\n      toDateTypeFilter: \"\",\n      statusTypeFilter: \"\",\n\n      appointmentId: \"null\",\n      filterType: \"\",\n      showPaymentModal: false,\n      selectedAppointment: null,\n\n      amount: 0,\n      amountError: \"\",\n      payableAmount: 0,\n      payableAmountError: \"\",\n      serviceBreakdownFile: null,\n      serviceBreakdownFileError: \"\",\n    };\n  }\n\n  paymentStatus = (val, isPaymentInitiated) => {\n    if (val === \"unpaid\") {\n      if (isPaymentInitiated) {\n        return (\n          <CBadge className=\"mr-1\" color=\"primary\">\n            INITIATED\n          </CBadge>\n        );\n      }\n      return (\n        <CBadge className=\"mr-1\" color=\"danger\">\n          UNPAID\n        </CBadge>\n      );\n    } else if (val === \"paid\") {\n      return (\n        <CBadge className=\"mr-1\" color=\"success\">\n          PAID\n        </CBadge>\n      );\n    }\n  };\n\n  serviceStatus = (val, isEscalated, isResolved, escalationReason) => {\n    if (val === \"rejected\") {\n      return (\n        <CBadge className=\"mr-1\" color=\"danger\">\n          Rejected\n        </CBadge>\n      );\n    } else if (val === \"accepted\") {\n      if (isEscalated) {\n        return (\n          <>\n            <CBadge className=\"mr-1\" color=\"danger\">\n              ISSUE RAISED\n            </CBadge>\n            <br />\n            <span style={{ fontWeight: \"bold\" }}>\n              Reason:{\" \"}\n              <span style={{ color: \"red\", fontWeight: \"bolder\" }}>\n                {escalationReason}\n              </span>\n            </span>\n          </>\n        );\n      }\n      if (isResolved) {\n        return (\n          <CBadge className=\"mr-1\" color=\"secondary\">\n            ISSUE RESOLVED\n          </CBadge>\n        );\n      }\n\n      return (\n        <CBadge className=\"mr-1\" color=\"success\">\n          Accepted\n        </CBadge>\n      );\n    } else if (val === \"pending\") {\n      return (\n        <CBadge className=\"mr-1\" color=\"primary\">\n          Pending\n        </CBadge>\n      );\n    }\n  };\n\n  serviceAction = (id, token, status, payment_status, amount, data) => {\n    console.log(id + token + status);\n    return (\n      <div style={{ width: \"140px\" }}>\n        {status == \"pending\" && (\n          <button\n            className=\"btn cancel-btn\"\n            onClick={() => this.acceptApplication(id, token, \"accepted\")}\n          >\n            <i className=\"fa fa-check\"></i>\n          </button>\n        )}\n\n        {status == \"pending\" && (\n          <button\n            className=\"btn cancel-btn\"\n            onClick={() => this.acceptApplication(id, token, \"rejected\")}\n          >\n            <i className=\"fa fa-remove\"></i>\n          </button>\n        )}\n\n        {status == \"accepted\" &&\n          payment_status == \"unpaid\" &&\n          !data?.isPaymentInitiated &&\n          !data?.isEscalated && (\n            <button\n              className=\"btn cancel-btn\"\n              onClick={() => {\n                this.setState({\n                  showPaymentModal: true,\n                  selectedAppointment: { id, token },\n                  amount,\n                  amountError: \"\",\n                  payableAmount: 0,\n                  payableAmountError: \"\",\n                  serviceBreakdownFile: null,\n                  serviceBreakdownFileError: \"\",\n                });\n              }}\n            >\n              <i className=\"fa fa-money\"></i>\n            </button>\n          )}\n\n        <Link\n          className=\"btn cancel-btn\"\n          to={{\n            pathname: \"/application-details\",\n            data: id, // your data array of objects\n          }}\n        >\n          <i className=\"fa fa-info\"></i>\n        </Link>\n      </div>\n    );\n  };\n\n  acceptApplication = (id, token, status) => {\n    var data = {\n      id: id,\n      status: status,\n      token: token,\n    };\n\n    // this.setState({ loading: true });\n    swal({\n      title: \"Are you sure?\",\n      text: \"The request status will be changed!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then((willDelete) => {\n      if (willDelete) {\n        swal(\"Status updated successfully!\", {\n          icon: \"success\",\n        });\n        fetch(api.apiUrl + \"update_application\", {\n          method: \"POST\",\n          headers: authHeader(),\n          body: JSON.stringify(data),\n        })\n          .then((response) => response.json())\n          .then((responseJsonFromServerData) => {\n            if (responseJsonFromServerData === \"success\") {\n              this.componentDidMount();\n            } else {\n              this.props.history.push(\"/404\");\n            }\n          })\n          .catch((error) => {\n            console.error(error);\n            this.props.history.push(\"/404\");\n          });\n      } else {\n        // swal(\"Your imaginary file is safe!\");\n      }\n    });\n  };\n\n  handleChange = (input) => (e) => {\n    // console.log(input);\n    // console.log(e.target.value);\n    this.setState({ [input]: e.target.value });\n    this.setState({ [input + \"Error\"]: \"\" });\n  };\n\n  initiatePaymentHandler = () => {\n    let error = false;\n    if (this.state.serviceBreakdownFile == null) {\n      this.setState({\n        serviceBreakdownFileError: \"Select Service Breakdown Image\",\n      });\n      error = true;\n    } else {\n      this.setState({ serviceBreakdownFileError: null });\n    }\n\n    if (this.state.payableAmount == null || this.state.payableAmount == \"\") {\n      this.setState({ payableAmountError: \"Enter Payable amount\" });\n      error = true;\n    } else {\n      if (isNaN(this.state.payableAmount)) {\n        this.setState({ payableAmountError: \"Not a valid number\" });\n        error = true;\n      } else {\n        this.setState({ payableAmountError: null });\n      }\n    }\n\n    if (!error) {\n      this.setState({ loading: true });\n\n      var formData = new FormData();\n\n      formData.append(\"serviceBreakdownFile\", this.state.serviceBreakdownFile);\n      formData.append(\"payableAmount\", this.state.payableAmount);\n      formData.append(\"id\", this.state.selectedAppointment?.id ?? \"\");\n      formData.append(\"token\", this.state.selectedAppointment?.token ?? \"\");\n\n      fetch(api.apiUrl + \"initiate_appointment_payment\", {\n        method: \"POST\",\n        headers: authHeaderFile(),\n        body: formData,\n      })\n        .then((response) => response.text())\n        .then((responseJsonFromServerData) => {\n          console.log(\"responseJsonFromServerData\", responseJsonFromServerData);\n          if (responseJsonFromServerData === \"success\") {\n            this.setState({ showPaymentModal: false });\n            swal(\"Payment initiated successfully!\", {\n              icon: \"success\",\n            });\n\n            setTimeout(() => {\n              this.componentDidMount();\n            }, 2500);\n          } else {\n            this.props.history.push(\"/404\");\n          }\n        })\n        .catch((error) => {\n          console.error(error);\n          this.props.history.push(\"/404\");\n        });\n    }\n  };\n\n  onChangeFile = (event) => {\n    const imageFile = event.target.files[0];\n    var stat = false;\n    if (!imageFile) {\n      console.log(\"1\");\n      this.setState({\n        serviceBreakdownFileError: \"Please select file\",\n        serviceBreakdownFile: null,\n      });\n      stat = true;\n      //   return false;\n    }\n    // console.log(imageFile.name);\n    if (!imageFile.name.match(/\\.(jpg|jpeg|png)$/)) {\n      console.log(\"2\");\n      this.setState({\n        serviceBreakdownFileError:\n          \"Please select valid file. Allowed types (jpg | jpeg | png)\",\n        serviceBreakdownFile: null,\n      });\n      stat = true;\n      //   return false;\n    }\n\n    if (Math.round(imageFile.size / 1024) > 2048) {\n      console.log(\"3\");\n      this.setState({\n        serviceBreakdownFileError: \"Max file size 2MB\",\n        serviceBreakdownFile: null,\n      });\n      stat = true;\n      //   return false;\n    }\n\n    if (stat === false) {\n      this.setState({\n        serviceBreakdownFile: event.target.files[0],\n        serviceBreakdownFileError: \"\",\n      });\n    } else {\n      console.log(\"failed\");\n      this.setState({\n        serviceBreakdownFile: null,\n      });\n    }\n  };\n\n  filter = (val, type) => {\n    var info = [];\n\n    this.setState({\n      appointmentId: val,\n      filterType: type,\n    });\n\n    if (type === \"reset\") {\n      var data = {};\n      fromDate = null;\n      toDate = null;\n      fromDateVal = null;\n      toDateVal = null;\n      this.setState({\n        statusTypeFilter: \"\",\n        fromDateTypeFilter: \"\",\n        toDateTypeFilter: \"\",\n      });\n    }\n\n    if (type === \"from\") {\n      this.setState({ fromDateTypeFilter: val });\n      //   localStorage.setItem(\"fromDate\", val);\n      fromDate = new Date(val);\n      fromDateVal = val;\n    }\n\n    if (type === \"to\") {\n      this.setState({ toDateTypeFilter: val });\n      //   localStorage.setItem(\"toDate\", val);\n      toDate = new Date(val);\n      toDateVal = val;\n    }\n\n    if (fromDate != null && toDate != null) {\n      if (fromDate.getTime() >= toDate.getTime()) {\n        swal(\"From Date should be greater than To Date\");\n      } else if (fromDate.getTime() < toDate.getTime()) {\n        console.log(\"correct\");\n        var data = {\n          fromDate: fromDateVal,\n          toDate: toDateVal,\n\n          id: userId,\n        };\n      }\n    }\n\n    this.setState({ loading: true });\n    fetch(api.apiUrl + \"get_applications_by_id\", {\n      method: \"POST\",\n      headers: authHeader(),\n      body: JSON.stringify(data),\n    })\n      .then((response) => response.json())\n      .then((responseJsonFromServerData) => {\n        console.log(responseJsonFromServerData);\n\n        responseJsonFromServerData.map((item, key) => {\n          var arr = {\n            client: item.user,\n            phone: item.mobileNumber,\n            date: moment(item.appointmentDate).format(\"MMM Do YYYY\"),\n            time: moment(item.appointmentTime, \"hh:mm:ss\").format(\"hh:mm A\"),\n            status: this.serviceStatus(\n              item.isApproved,\n              item.isEscalated,\n              item.isResolved,\n              item?.escalationReason\n            ),\n            payment_status: this.paymentStatus(\n              item?.paid,\n              item?.isPaymentInitiated\n            ),\n            action: this.serviceAction(\n              item.id,\n              item.firebaseToken,\n              item.isApproved,\n              item?.paid,\n              item?.amount ?? 0,\n              item\n            ),\n          };\n          info.push(arr);\n        });\n        this.setState({\n          data: info,\n          loading: false,\n        });\n      })\n      .catch((error) => {\n        console.error(error);\n        this.setState({ loading: false });\n        this.props.history.push(\"/404\");\n      });\n  };\n\n  componentDidMount() {\n    // var user = JSON.parse(localStorage.getItem(\"user\"));\n    // console.log(userId);\n    var con = {\n      id: userId,\n    };\n    var info = [];\n    this.setState({ loading: true });\n    fetch(api.apiUrl + \"get_applications_by_id\", {\n      method: \"POST\",\n      headers: authHeader(),\n      body: JSON.stringify(con),\n    })\n      .then((response) => response.json())\n      .then((responseJsonFromServerData) => {\n        console.log(responseJsonFromServerData);\n        // if (responseJsonFromServerData.length !== 0) {\n        responseJsonFromServerData.map((item, key) => {\n          var arr = {\n            client: item.user,\n            phone: item.mobileNumber,\n            date: moment(item.appointmentDate).format(\"MMM Do YYYY\"),\n            time: moment(item.appointmentTime, \"hh:mm:ss\").format(\"hh:mm A\"),\n            status: this.serviceStatus(\n              item.isApproved,\n              item.isEscalated,\n              item.isResolved,\n              item?.escalationReason\n            ),\n            payment_status: this.paymentStatus(\n              item?.paid,\n              item?.isPaymentInitiated\n            ),\n            action: this.serviceAction(\n              item.id,\n              item.firebaseToken,\n              item.isApproved,\n              item?.paid,\n              item?.amount ?? 0,\n              item\n            ),\n          };\n          info.push(arr);\n        });\n        this.setState({\n          data: info,\n          loading: false,\n        });\n        // } else {\n        //   //redirect to 404 page\n        //   this.props.history.push(\"/404\");\n        // }\n      })\n      .catch((error) => {\n        console.error(error);\n        this.setState({ loading: false });\n      });\n  }\n\n  render() {\n    var datatable = {\n      columns: [\n        {\n          label: \"Client\",\n          field: \"client\",\n          sort: \"disabled\",\n          width: 150,\n          attributes: {\n            \"aria-controls\": \"DataTable\",\n            \"aria-label\": \"Icon\",\n          },\n        },\n        {\n          label: \"Contact No.\",\n          field: \"phone\",\n          sort: \"disabled\",\n          width: 200,\n        },\n        {\n          label: \"Appointment Date\",\n          field: \"date\",\n          sort: \"disabled\",\n          width: 200,\n        },\n        {\n          label: \"Appointment Time\",\n          field: \"time\",\n          sort: \"disabled\",\n          width: 100,\n        },\n        {\n          label: \"Status\",\n          field: \"status\",\n          sort: \"disabled\",\n          width: 150,\n        },\n        {\n          label: \"Payment Status\",\n          field: \"payment_status\",\n          sort: \"disabled\",\n          width: 150,\n        },\n        {\n          label: \"Action\",\n          field: \"action\",\n          sort: \"disabled\",\n          width: 270,\n        },\n      ],\n      rows: [...this.state.data],\n    };\n    return (\n      <>\n        <CRow>\n          <CCol>\n            <CCard>\n              <ScaleLoader\n                height={40}\n                width={12}\n                css={override}\n                size={150}\n                //size={\"150px\"} this also works\n                color={\"#B54545\"}\n                loading={this.state.loading}\n              />\n              <CCardHeader>\n                <CRow>\n                  <CCol sm=\"6\" xs=\"8\" md=\"8\">\n                    <h3>Bookings</h3>\n                  </CCol>\n                  <CCol sm=\"6\" xs=\"4\" md=\"4\"></CCol>\n                </CRow>\n              </CCardHeader>\n              <CCardBody>\n                <CRow>\n                  <CCol md=\"3\" sm=\"3\" xs=\"12\">\n                    <CInput\n                      autoFocus\n                      type=\"date\"\n                      onChange={(e) => this.filter(e.target.value, \"from\")}\n                      value={this.state.fromDateTypeFilter}\n                      style={{ margin: \"5px\" }}\n                    ></CInput>\n                  </CCol>\n\n                  <CCol md=\"3\" sm=\"3\" xs=\"12\">\n                    <CInput\n                      type=\"date\"\n                      onChange={(e) => this.filter(e.target.value, \"to\")}\n                      value={this.state.toDateTypeFilter}\n                      style={{ margin: \"5px\" }}\n                    ></CInput>\n                  </CCol>\n\n                  <CCol md=\"3\" sm=\"3\" xs=\"12\">\n                    <CButton\n                      onClick={(e) => this.filter(e.target.value, \"reset\")}\n                      style={{ margin: \"5px\" }}\n                      className=\"btn submit-btn\"\n                    >\n                      Reset\n                    </CButton>\n                  </CCol>\n                </CRow>\n                <CRow>\n                  <CCol md=\"12\" sm=\"12\" xs=\"12\">\n                    <MDBDataTableV5\n                      hover\n                      entriesOptions={[6, 10]}\n                      entries={6}\n                      pagesAmount={4}\n                      data={datatable}\n                      pagingTop\n                      searchTop\n                      searchBottom={false}\n                      barReverse\n                      responsive\n                    />\n                  </CCol>\n                </CRow>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n\n        <CModal\n          centered\n          show={this.state.showPaymentModal}\n          onClose={() => this.setState({ showPaymentModal: false })}\n        >\n          <CModalHeader>\n            <CModalTitle>Initiate Payment</CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            <form id=\"initiatePaymentForm\">\n              <CFormGroup>\n                <CLabel htmlFor=\"amount\">Approx Amount</CLabel>\n\n                <CInput\n                  autoFocus\n                  type=\"text\"\n                  placeholder=\"Enter Approx Amount\"\n                  onChange={this.handleChange(\"amount\")}\n                  style={{\n                    borderColor: this.state.amountError === \"\" ? \"\" : \"red\",\n                  }}\n                  value={this.state.amount}\n                  disabled\n                />\n              </CFormGroup>\n              <p\n                className=\"error\"\n                style={{\n                  display: this.state.amountError === \"\" ? \"none\" : \"block\",\n                }}\n              >\n                <i className=\"fa fa-exclamation-triangle\"></i>{\" \"}\n                {this.state.amountError}\n              </p>\n\n              <br />\n\n              <CFormGroup>\n                <CLabel htmlFor=\"payableAmount\">Payable Amount</CLabel>\n\n                <CInput\n                  autoFocus\n                  type=\"text\"\n                  placeholder=\"Enter Payable Amount\"\n                  onChange={this.handleChange(\"payableAmount\")}\n                  style={{\n                    borderColor:\n                      this.state.payableAmountError === \"\" ? \"\" : \"red\",\n                  }}\n                />\n              </CFormGroup>\n              <p\n                className=\"error\"\n                style={{\n                  display:\n                    this.state.payableAmountError === \"\" ? \"none\" : \"block\",\n                }}\n              >\n                <i className=\"fa fa-exclamation-triangle\"></i>{\" \"}\n                {this.state.payableAmountError}\n              </p>\n\n              <br />\n\n              <CFormGroup>\n                <CLabel htmlFor=\"\">Service breakdown file</CLabel>\n                <CInputFile id=\"\" name=\"\" onChange={this.onChangeFile} />\n              </CFormGroup>\n\n              <p\n                className=\"error\"\n                style={{\n                  display:\n                    this.state.serviceBreakdownFileError === \"\"\n                      ? \"none\"\n                      : \"block\",\n                }}\n              >\n                <i className=\"fa fa-exclamation-triangle\"></i>{\" \"}\n                {this.state.serviceBreakdownFileError}\n              </p>\n            </form>\n          </CModalBody>\n          <CModalFooter>\n            <CButton\n              color=\"secondary\"\n              onClick={() => this.setState({ showPaymentModal: false })}\n            >\n              Close\n            </CButton>\n            <CButton\n              color=\"primary\"\n              onClick={() => {\n                this.initiatePaymentHandler();\n              }}\n            >\n              Send Payment Request\n            </CButton>\n          </CModalFooter>\n        </CModal>\n      </>\n    );\n  }\n}\nexport default ServiceProviderAppointments;\n"],"sourceRoot":""}